name: CI-Pipeline

on:
  # Informationen zu verschiedenen Events auf die Pipeline bei PR reagiert habe ich hier bekommen
  # Quelle : https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#pull_request
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main
      - release

jobs:
  #Stage 1: Build
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-action
      - name: Build
        run: go build -o ./artifact.bin ./*.go
        # Informationen zum teilen von artifakten und Daten habe ich hier erhalten
        # Quelle: https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/storing-and-sharing-data-from-a-workflow
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: ./artifact.bin
          compression-level: 9

  #Stage 2: Test
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-action
      - name: Test
        run: go test -race -v ./...

  #Stage 3: Release
  # Informationen zum veröffentlichen von Artefakten habe ich hier bekommen und mich inspirieren lassen
  # Quelle: https://trstringer.com/github-actions-create-release-upload-artifacts/
  # und dann von der offiziellen Release Aktion Quelle : https://github.com/actions/create-release
  release:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: ./
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.CI_CD_TOKEN }}
        # Informationen über den Kontext und informationszugriff während der Pipeline habe ich hier gefunden
        # Quelle: https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#github-context
        # und über simples versioning hier: https://stackoverflow.com/questions/54310050/how-to-version-build-artifacts-using-github-actions
        with:
          tag_name: "release/${{github.run_number}}"
          release_name: "Release ${{github.run_number}}"
      - name: Upload Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.CI_CD_TOKEN  }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact.bin
          asset_name: artifact.bin
          asset_content_type: application/octet-stream
